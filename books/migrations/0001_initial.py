# Generated by Django 4.1.2 on 2022-11-09 17:55

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("genders", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.TextField()),
                (
                    "transaction",
                    models.CharField(
                        choices=[("Sale", "Sale"), ("Location", "Location")],
                        default="Location",
                        max_length=10,
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=6)),
                ("available", models.BooleanField(default=True)),
                ("author", models.CharField(max_length=100)),
                ("year", models.CharField(max_length=4)),
                (
                    "language",
                    models.CharField(
                        choices=[("Portuguese", "Portuguese"), ("English", "English")],
                        default="English",
                        max_length=10,
                    ),
                ),
                ("publishing", models.CharField(max_length=254)),
                (
                    "condition",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ]
                    ),
                ),
                ("isbn", models.CharField(max_length=13)),
                ("isActive", models.BooleanField(default=True)),
                (
                    "genders",
                    models.ManyToManyField(related_name="book", to="genders.gender"),
                ),
            ],
        ),
    ]
